---
title: "test"
sidebar: false
filters:
  - shinylive
execute:
  eval: true
  cache: false
---

```{r}
source("~/R/OIID/topics/function.R")
library(tidyverse, verbose = FALSE)
library(ggplot2)
library(lubridate)
library(rsdmx)
library(owidR)
library(reticulate)
library(gt)
library(scales, verbose = FALSE)
library(janitor)
library(shiny)
library(shinylive)
library(thematic)
library(waiter)
library(plotly)
library(ggiraph)
library(fst)
library(readr)  # For reading and writing CSV files
library(R.utils)  # For gzip compression
```

```{r}
#| eval: false

# List available resources. This will be in the backend to create the different datasets.
url <- "http://sdmx.istat.it/SDMXWS/rest/dataflow/"
data <- readSDMX(url) %>% as.data.frame(labels = TRUE)
```

```{r}
library(httr)
library(tidyverse)
library(rsdmx)

# URL to download data
url <- "https://sdmx.istat.it/SDMXWS/rest/dataflow/"
# Fetch the data using rsdmx
sdmx_data <- readSDMX(url) %>% as_tibble(labels = TRUE)
```

# Suicidi

```{r}
providers <- getSDMXServiceProviders() %>% as.data.frame(providers)
```

```{r}
# import suicide dataset
suicide <- read_db(
  id = "39_1005",
  # dsd = TRUE,
  path = "~/R/OIID/topics/TEST/datasets/",
  version = "1.0"
  )

# plot suicide dataset 
suicide_total <- suicide %>% 
  filter(
    mod_suicidio == "tutte le voci" &
      eta == "totale" &
      paese_cittad == "Italia" &
      istruzione == "totale" &
      terr_res == "Italia" & # Totale
      tipo_dato == "morti" &
      sesso != "totale" &
      stato_civ == "totale" &
      malattie_fisiche == "tutte le voci" &
      malattie_mentali == "tutte le voci" &
      mese_decesso == "anno"
  )

plot_time_series(
  t = suicide_total,
  x = suicide_total$year,
  x_text = "Anni",
  y = suicide_total$value,
  y_text = "Numero",
  colour = suicide_total$sesso,
  palette = "Dark2",
  title = "",
  subtitle = "",
  xlabs = "Anni",
  ylabs = "Numero",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

# Reati

```{r}
felonies_db <- read_db(
  id = "73_58",
  dsd = TRUE,
  path = "~/R/OIID/topics/TEST/datasets/",
  version = "1.4"
  )

felonies <- felonies_db %>%
  filter(
    tipo_reato == "delitti contro l'incolumitÃ  individuale" |
      tipo_reato %>% str_detect("omicidio") |
      tipo_reato %>% str_detect("violenza sessuale") |
      tipo_reato %>% str_detect("violenza privata")
    ) %>% 
  filter(
    interv_reato_sent == "totale" &
      eta_reato == "totale" &
      eta_reatograve == "totale" &
      distr_corteapp == "tutti i distretti" &
      uff_giud == "tutte le voci" &
      itter107 == "Italia" &
      misure_sicur == "tutte le voci" &
      natura_reato == "tutte le voci" &
      precedenti == "tutte le voci" &
      # sesso != "totale" &
      tipo_dato == "numero di condannati per delitto con sentenza irrevocabile" &
      anno_reato == "tutte le voci"
  )
```

::: panel-tabset
## Totale

```{r}
felonies_total <- felonies %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = felonies_total,
  x = felonies_total$year,
  x_text = "Anni",
  y = felonies_total$value,
  y_text = "Numero",
  colour = felonies_total$sesso,
  palette = "Dark2",
  title = "Totale dei Reati",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Omicidio del Consenziente Consumato

```{r}
omicidio_consenziente_consumato <- felonies %>% 
  filter(tipo_reato == "omicidio del consenziente consumato") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = omicidio_consenziente_consumato,
  x = omicidio_consenziente_consumato$year,
  x_text = "Anni",
  y = omicidio_consenziente_consumato$value,
  y_text = "Numero",
  colour = omicidio_consenziente_consumato$sesso,
  palette = "Dark2",
  title = "Omicidio del consenziente consumato",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Omicidio Colposo

```{r}
omicidio_colposo <- felonies %>% 
  filter(tipo_reato == "omicidio colposo") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = omicidio_colposo,
  x = omicidio_colposo$year,
  y = omicidio_colposo$value,
  x_text = "Anni",
  y_text = "Numero",
  colour = omicidio_colposo$sesso,
  palette = "Dark2",
  title = "Omicidio del consenziente consumato",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Omicidio Volontario

```{r}
omicidio_volontario <- felonies %>% 
  filter(tipo_reato == "omicidio volontario") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = omicidio_volontario,
  x = omicidio_volontario$year,
  y = omicidio_volontario$value,
  x_text = "Anni",
  y_text = "Numero",
  colour = omicidio_volontario$sesso,
  palette = "Dark2",
  title = "Omicidio volontario",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Omicidio Volontario Consumato

```{r}
omicidio_volontario_consumato <- felonies %>% 
  filter(tipo_reato == "omicidio volontario consumato") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = omicidio_volontario_consumato,
  x = omicidio_volontario_consumato$year,
  y = omicidio_volontario_consumato$value,
  x_text = "Anni",
  y_text = "Numero",
  colour = omicidio_volontario_consumato$sesso,
  palette = "Dark2",
  title = "Omicidio volontario consumato",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Omicidio Volontario Tentato

```{r}
omicidio_volontario_tentato <- felonies %>% 
  filter(tipo_reato == "omicidio volontario tentato") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = omicidio_volontario_tentato,
  x = omicidio_volontario_tentato$year,
  y = omicidio_volontario_tentato$value,
  x_text = "Anni",
  y_text = "Numero",
  colour = omicidio_volontario_tentato$sesso,
  palette = "Dark2",
  title = "Omicidio volontario tentato",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Omicidio Preterintenzionale

```{r}
omicidio_volontario_preterintenzionale <- felonies %>% 
  filter(tipo_reato == "omicidio volontario preterintenzionale") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = omicidio_volontario_preterintenzionale,
  x = omicidio_volontario_preterintenzionale$year,
  y = omicidio_volontario_preterintenzionale$value,
  x_text = "Anni",
  y_text = "Numero",
  colour = omicidio_volontario_preterintenzionale$sesso,
  palette = "Dark2",
  title = "Omicidio volontario preterintenzionale",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Violenza Privata Tentata

```{r}
violenza_privata_tentata <- felonies %>% 
  filter(tipo_reato == "violenza privata tentata") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = violenza_privata_tentata,
  x = violenza_privata_tentata$year,
  y = violenza_privata_tentata$value,
  x_text = "Anni",
  y_text = "Numero",
  colour = violenza_privata_tentata$sesso,
  palette = "Dark2",
  title = "Violenza Privata Tentata",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Violenza Privata

```{r}
violenza_privata <- felonies %>% 
  filter(tipo_reato == "violenza privata") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = violenza_privata,
  x = violenza_privata$year,
  y = violenza_privata$value,
  x_text = "Anni",
  y_text = "Numero",
  colour = violenza_privata$sesso,
  palette = "Dark2",
  title = "Violenza Privata",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Violenza Sessuale di Gruppo

```{r}
violenza_sessuale_gruppo <- felonies %>% 
  filter(tipo_reato == "violenza sessuale di gruppo") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = violenza_sessuale_gruppo,
  x = violenza_sessuale_gruppo$year,
  y = violenza_sessuale_gruppo$value,
  x_text = "Anni",
  y_text = "Numero",
  colour = violenza_sessuale_gruppo$sesso,
  palette = "Dark2",
  title = "Violenza Sessuale di Gruppo",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```

## Violenza Sessuale

```{r}
violenza_sessuale <- felonies %>% 
  filter(tipo_reato == "violenza sessuale") %>% 
  summarise(
    value = sum(value),
    .by = c(year, sesso)
  )
# plot
plot_time_series(
  t = violenza_sessuale,
  x = violenza_sessuale$year,
  y = violenza_sessuale$value,
  x_text = "Anni",
  y_text = "Numero",
  colour = violenza_sessuale$sesso,
  palette = "Dark2",
  title = "Violenza Sessuale",
  subtitle = "Serie storica per sesso",
  xlabs = "Anni",
  ylabs = "Valore",
  legend_title = "Sesso",
  is_percentage = FALSE
  )
```
:::

# Popolazione

```{r}
population <- read_db(
  id = "52_1194",
  dsd = TRUE,
  path = "~/R/OIID/topics/TEST/datasets/",
  version = "1.5"
  )
population_total <- population %>% 
  filter(
    !is.na(year) &
    freq == "annuale" & 
    cittadinanza == "totale" &
      itter107 == "Italia" &
      classe_eta == "15-64 anni" &
      titolo_studio == "totale"
  ) %>% 
  select(year, sesso, value)
```

# Totale in proporzione alla popolazione

```{r}
omicidi_vs_popolazione <- felonies_total %>% 
  left_join(
    population_total,
    by = c("year", "sesso"),
    suffix = c("_omicidi", "_popolazione")
  ) %>% 
  filter(!is.na(value_popolazione)) %>% 
  mutate(pct = value_omicidi / value_popolazione) %>% 
  rename(
    omicidi = value_omicidi,
    popolazione = value_popolazione
    ) %>% 
  select(year, sesso, pct, omicidi, popolazione) %>% 
  pivot_longer(
    cols = !c("year", "sesso"),
    names_to = "variabile",
    values_to = "valore"
  )
```

```{shinylive-r}
#| standalone: true
#| viewerHeight: 800

source("~/R/OIID/topics/function.R")
library(tidyverse, verbose = FALSE)
library(ggplot2)
library(lubridate)
library(rsdmx)
library(owidR)
library(reticulate)
library(gt)
library(scales, verbose = FALSE)
library(janitor)
library(shiny)
library(shinylive)
library(thematic)
library(waiter)
library(plotly)
library(ggiraph)
library(fst)
library(readr)  # For reading and writing CSV files
library(R.utils)  # For gzip compression

omicidi_vs_popolazione <- felonies_total %>% 
  left_join(
    population_total,
    by = c("year", "sesso"),
    suffix = c("_omicidi", "_popolazione")
  ) %>% 
  filter(!is.na(value_popolazione)) %>% 
  mutate(pct = value_omicidi / value_popolazione) %>% 
  rename(
    omicidi = value_omicidi,
    popolazione = value_popolazione
    ) %>% 
  select(year, sesso, pct, omicidi, popolazione) %>% 
  pivot_longer(
    cols = !c("year", "sesso"),
    names_to = "variabile",
    values_to = "valore"
  )

ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      selectizeInput(
        inputId = "sesso",
        label = "Sesso",
        choices = unique(omicidi_vs_popolazione$sesso),
        multiple = TRUE,
        selected = c("maschi", "femmine")
      ),
      selectizeInput(
        inputId = "variabile",
        label = "Variabile",
        choices = unique(omicidi_vs_popolazione$variabile),
        selected = "value_omicidi"
      )
    ),
    mainPanel(
      plotlyOutput("plot", width = "100%", height = "600px")
    )
  )
)

server <- function(input, output) {

  data <- reactive({
    omicidi_vs_popolazione %>% 
      filter(
        sesso %in% input$sesso &
          variabile %in% input$variabile
      )
  })
  
  output$plot <- renderPlotly({
    
    g <- ggplot(data(), aes(x = year, y = valore, colour = sesso)) +
      geom_line() +
      geom_point() +
      scale_color_manual(
        values = c("maschi" = "#1B9E77",
                   "femmine" = "#D95F02")
      ) +
      scale_x_date(
        date_breaks = "year",
        date_labels = "%Y"
      ) +
      labs(
        title = "Omicidi",
        subtitle = "Per sesso e variabile",
        x = "Anni",
        y = input$variabile,
        color = "Sesso"
      ) +
      scale_y_continuous(breaks = scales::breaks_pretty(n = 10)) +
      theme_minimal()
    ggplotly(g) %>% 
      layout(hovermode = "x unified")
    
  })
}

shinyApp(ui = ui, server = server)
```


